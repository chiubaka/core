{"version":3,"sources":["../src/api/actions/ModelApi.ts"],"names":[],"mappings":"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","file":"../../../api/actions/ModelApi.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { IAuthState } from \"../../auth/model/AuthenticationState\";\n/* tslint:enable:no-unused-variable */\n\nimport * as pluralize from \"pluralize\";\nimport { isNullOrUndefined } from \"util\";\n\nimport { IModel } from \"../model/\";\nimport { Api, ApiAction } from \"./Api\";\n\nexport declare type Dispatch = ThunkDispatch<any, void, any>;\n\ninterface IModelUpdateDependency<T> {\n  idMapper: (modelObject: T) => string[];\n  modelApiAction: (id: string) => ApiAction<any>;\n}\n\nexport class ModelApi<BackendType extends IModel, FrontendType extends IModel = BackendType> extends Api {\n  private static API_PATH = \"/api\";\n\n  public SUCCESSFUL_GET_ALL_TYPE: string;\n  public SUCCESSFUL_GET_TYPE: string;\n  public SUCCESSFUL_CREATE_TYPE: string;\n  public SUCCESSFUL_UPDATE_TYPE: string;\n  public SUCCESSFUL_DELETE_TYPE: string;\n\n  protected endpoint: string;\n  private modelUpdateDependencies: Array<IModelUpdateDependency<FrontendType>>;\n\n  constructor(modelName: string) {\n    super();\n    const modelNameUpper = modelName.toUpperCase();\n    this.SUCCESSFUL_GET_ALL_TYPE = `SUCCESSFUL_GET_ALL_${pluralize(modelNameUpper)}`;\n    this.SUCCESSFUL_GET_TYPE = `SUCCESSFUL_GET_${modelNameUpper}`;\n    this.SUCCESSFUL_CREATE_TYPE = `SUCCESSFUL_CREATE_${modelNameUpper}`;\n    this.SUCCESSFUL_UPDATE_TYPE = `SUCCESSFUL_UPDATE_${modelNameUpper}`;\n    this.SUCCESSFUL_DELETE_TYPE = `SUCCESSFUL_DELETE_${modelNameUpper}`;\n    this.endpoint = `${ModelApi.API_PATH}/${pluralize(modelName.toLowerCase())}/`;\n    this.modelUpdateDependencies = [];\n\n    this.bulkTransformForFrontend = this.bulkTransformForFrontend.bind(this);\n    this.processModelUpdateDependencies = this.processModelUpdateDependencies.bind(this);\n  }\n\n  public getAll(): ApiAction<FrontendType[]> {\n    return this.actionCreator(this.getListEndpoint(), null, \"GET\", (dispatch, response: FrontendType[]) => {\n      dispatch(this.successfulGetAllAction(response));\n    }, null, this.bulkTransformForFrontend);\n  }\n\n  public get(id: string): ApiAction<FrontendType> {\n    return this.actionCreator(this.getItemEndpoint(id), null, \"GET\", (dispatch, response: FrontendType) => {\n      dispatch(this.successfulGetAction(response));\n    }, null, this.transformForFrontend);\n  }\n\n  public getListEndpoint() {\n    return this.endpoint;\n  }\n\n  public getItemEndpoint(id: string) {\n    return `${this.endpoint}${id}/`;\n  }\n\n  public create(payload: Partial<FrontendType>): ApiAction<FrontendType> {\n    return this.actionCreator(this.getListEndpoint(), payload, \"POST\", (dispatch, response: FrontendType) => {\n      dispatch(this.successfulCreateAction(response));\n      this.processModelUpdateDependencies(dispatch, response);\n    }, this.transformForBackend, this.transformForFrontend) as ApiAction<FrontendType>;\n  }\n\n  public update(original: FrontendType, updated: FrontendType): ApiAction<FrontendType> {\n    return this.actionCreator(this.getItemEndpoint(updated.id), updated, \"PUT\", (dispatch, response: FrontendType) => {\n      dispatch(this.successfulUpdateAction(original, response));\n      this.processModelUpdateDependencies(dispatch, original);\n      this.processModelUpdateDependencies(dispatch, response);\n    }, this.transformForBackend, this.transformForFrontend);\n  }\n\n  public createOrUpdate(original: Partial<FrontendType>, updated: Partial<FrontendType>): ApiAction<FrontendType> {\n    if (original && original.id) {\n      return this.update(original as FrontendType, updated as FrontendType);\n    } else {\n      return this.create(updated);\n    }\n  }\n\n  public delete(deleted: FrontendType) {\n    return this.actionCreator(this.getItemEndpoint(deleted.id), null, \"DELETE\", (dispatch, _response) => {\n      dispatch(this.successfulDeleteAction(deleted));\n    });\n  }\n\n  public successfulGetAllAction(payload: FrontendType[]) {\n    return {\n      type: this.SUCCESSFUL_GET_ALL_TYPE,\n      payload,\n    };\n  }\n\n  public successfulGetAction(payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_GET_TYPE,\n      payload,\n    };\n  }\n\n  public successfulCreateAction(payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_CREATE_TYPE,\n      payload,\n    };\n  }\n\n  public successfulUpdateAction(original: FrontendType, payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_UPDATE_TYPE,\n      original,\n      payload,\n    };\n  }\n\n  public successfulDeleteAction(deleted: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_DELETE_TYPE,\n      deleted,\n    };\n  }\n\n  public addModelUpdateDependency(idMapper: (data: FrontendType) => string[],\n                                  dependentApiAction: (id: string) => ApiAction<any>,\n                                  apiThisArg: Api) {\n    this.modelUpdateDependencies.push({idMapper, modelApiAction: dependentApiAction.bind(apiThisArg)});\n  }\n\n  protected transformForFrontend(object: BackendType): FrontendType {\n    return object as any;\n  }\n\n  protected transformForBackend(object: FrontendType): BackendType {\n    return object as any;\n  }\n\n  protected bulkTransformForFrontend(objects: BackendType[]): FrontendType[] {\n    return objects.map(this.transformForFrontend);\n  }\n\n  private processModelUpdateDependencies(dispatch: Dispatch, modelObject: FrontendType) {\n    this.modelUpdateDependencies.forEach((dependency) => {\n      const dependencyIds = dependency.idMapper(modelObject);\n\n      if (!isNullOrUndefined(dependencyIds)) {\n        dependencyIds.forEach((dependencyId) => {\n          if (!isNullOrUndefined(dependencyId)) {\n            dispatch(dependency.modelApiAction(dependencyId));\n          }\n        });\n      }\n    });\n  }\n}\n"]}