{"version":3,"sources":["../src/api/actions/ModelApi/adapters/types.ts"],"names":[],"mappings":"","file":"../../../../../api/actions/ModelApi/adapters/types.js","sourcesContent":["import { ModelApi } from \"../\";\nimport { IModel } from \"../../../../orm\";\nimport { ApiAction } from \"../../types\";\n\nexport interface IModelApiAdapter<BackendType extends IModel, FrontendType extends IModel> {\n  getAll: () => ApiAction<FrontendType[]>;\n  get: (id: string) => ApiAction<FrontendType>;\n  create: (payload: Partial<FrontendType>) => ApiAction<FrontendType>;\n  update: (original: FrontendType, updated: FrontendType) => ApiAction<FrontendType>;\n  delete: (deleted: FrontendType) => ApiAction<unknown>;\n  setApi: (api: ModelApi<BackendType, FrontendType>) => void;\n}\n"]}