{"version":3,"sources":["../src/api/actions/ModelApi/index.ts"],"names":[],"mappings":"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","file":"../../../../api/actions/ModelApi/index.js","sourcesContent":["import { ThunkDispatch } from \"redux-thunk\";\n\nimport * as pluralize from \"pluralize\";\nimport { isNullOrUndefined } from \"util\";\n\nimport { IModel } from \"../../model\";\nimport { Api } from \"../Api\";\nimport { ApiAction } from \"../types\";\nimport { IModelApiAdapter, RestApiAdapter } from \"./adapters\";\n\nexport declare type Dispatch = ThunkDispatch<any, void, any>;\n\ninterface IModelUpdateDependency<T> {\n  idMapper: (modelObject: T) => string[];\n  modelApiAction: (id: string) => ApiAction<any>;\n}\n\nexport class ModelApi<\n  BackendType extends IModel,\n  FrontendType extends IModel = BackendType,\n> extends Api<IModelApiAdapter<BackendType, FrontendType>> {\n\n  public SUCCESSFUL_GET_ALL_TYPE: string;\n  public SUCCESSFUL_GET_TYPE: string;\n  public SUCCESSFUL_CREATE_TYPE: string;\n  public SUCCESSFUL_UPDATE_TYPE: string;\n  public SUCCESSFUL_DELETE_TYPE: string;\n\n  protected endpoint: string;\n  private modelUpdateDependencies: Array<IModelUpdateDependency<FrontendType>>;\n\n  constructor(modelName: string, adapter?: IModelApiAdapter<BackendType, FrontendType>) {\n    adapter = adapter || new RestApiAdapter(modelName);\n    super(adapter);\n    // TODO: There's some code smell in having to create a bilateral reference here...\n    // Doing this also forces a lot of ModelApi methods which should be private to instead\n    // be public...\n    adapter.setApi(this);\n    const modelNameUpper = modelName.toUpperCase();\n    this.SUCCESSFUL_GET_ALL_TYPE = `SUCCESSFUL_GET_ALL_${pluralize(modelNameUpper)}`;\n    this.SUCCESSFUL_GET_TYPE = `SUCCESSFUL_GET_${modelNameUpper}`;\n    this.SUCCESSFUL_CREATE_TYPE = `SUCCESSFUL_CREATE_${modelNameUpper}`;\n    this.SUCCESSFUL_UPDATE_TYPE = `SUCCESSFUL_UPDATE_${modelNameUpper}`;\n    this.SUCCESSFUL_DELETE_TYPE = `SUCCESSFUL_DELETE_${modelNameUpper}`;\n    this.modelUpdateDependencies = [];\n\n    this.bulkTransformForFrontend = this.bulkTransformForFrontend.bind(this);\n    this.processModelUpdateDependencies = this.processModelUpdateDependencies.bind(this);\n  }\n\n  public getAll(): ApiAction<FrontendType[]> {\n    return this.getAdapter().getAll();\n  }\n\n  public get(id: string): ApiAction<FrontendType> {\n    return this.getAdapter().get(id);\n  }\n\n  public create(payload: Partial<FrontendType>): ApiAction<FrontendType> {\n    return this.getAdapter().create(payload);\n  }\n\n  public update(original: FrontendType, updated: FrontendType): ApiAction<FrontendType> {\n    return this.getAdapter().update(original, updated);\n  }\n\n  public createOrUpdate(original: Partial<FrontendType>, updated: Partial<FrontendType>): ApiAction<FrontendType> {\n    if (original && original.id) {\n      return this.update(original as FrontendType, updated as FrontendType);\n    } else {\n      return this.create(updated);\n    }\n  }\n\n  public delete(deleted: FrontendType) {\n    return this.getAdapter().delete(deleted);\n  }\n\n  public successfulGetAllAction(payload: FrontendType[]) {\n    return {\n      type: this.SUCCESSFUL_GET_ALL_TYPE,\n      payload,\n    };\n  }\n\n  public successfulGetAction(payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_GET_TYPE,\n      payload,\n    };\n  }\n\n  public successfulCreateAction(payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_CREATE_TYPE,\n      payload,\n    };\n  }\n\n  public successfulUpdateAction(original: FrontendType, payload: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_UPDATE_TYPE,\n      original,\n      payload,\n    };\n  }\n\n  public successfulDeleteAction(deleted: FrontendType) {\n    return {\n      type: this.SUCCESSFUL_DELETE_TYPE,\n      deleted,\n    };\n  }\n\n  public addModelUpdateDependency(idMapper: (data: FrontendType) => string[],\n                                  dependentApiAction: (id: string) => ApiAction<any>,\n                                  apiThisArg: Api<IModelApiAdapter<BackendType, FrontendType>>) {\n    this.modelUpdateDependencies.push({idMapper, modelApiAction: dependentApiAction.bind(apiThisArg)});\n  }\n\n  public transformForFrontend(object: BackendType): FrontendType {\n    return object as any;\n  }\n\n  public transformForBackend(object: FrontendType): BackendType {\n    return object as any;\n  }\n\n  public bulkTransformForFrontend(objects: BackendType[]): FrontendType[] {\n    return objects.map(this.transformForFrontend);\n  }\n\n  public processModelUpdateDependencies(dispatch: Dispatch, modelObject: FrontendType) {\n    this.modelUpdateDependencies.forEach((dependency) => {\n      const dependencyIds = dependency.idMapper(modelObject);\n\n      if (!isNullOrUndefined(dependencyIds)) {\n        dependencyIds.forEach((dependencyId) => {\n          if (!isNullOrUndefined(dependencyId)) {\n            dispatch(dependency.modelApiAction(dependencyId));\n          }\n        });\n      }\n    });\n  }\n}\n"]}