{"version":3,"sources":["../src/api/clients/RestClient.ts"],"names":[],"mappings":"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","file":"../../../api/clients/RestClient.js","sourcesContent":["import * as HttpStatus from \"http-status-codes\";\nimport { isNullOrUndefined } from \"util\";\n\nimport { completeLogoutAndRedirect } from \"../../auth/actions/thunks\";\nimport { AuthDispatch as Dispatch } from \"../../auth/actions/types\";\nimport { IAuthState } from \"../../auth/model/AuthenticationState\";\nimport { Api } from \"../actions/Api\";\nimport { ApiAction } from \"../actions/types\";\n\nexport declare type HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\nexport declare type RestApiSuccessCallback<T> = (dispatch: Dispatch, response: T) => void;\nexport declare type ResponseTransformer<BackendType, FrontendType> = (response: BackendType) => FrontendType;\nexport declare type PayloadTransformer<BackendType, FrontendType> = (payload: FrontendType) => BackendType;\n\nexport interface IRestApiError {[field: string]: string[]; }\n\nexport class RestClient {\n  public static getInstance() {\n    if (!RestClient.singleton) {\n      RestClient.singleton = new RestClient();\n    }\n\n    return RestClient.singleton;\n  }\n\n  private static singleton: RestClient;\n\n  // TODO: authPrefix should be customizable based on app configs somehow\n  public static apiHeaders(accessToken: string, authPrefix: string = \"Bearer\") {\n    const headers = new Headers();\n    if (accessToken) {\n      headers.append(\"Authorization\", `${authPrefix} ${accessToken}`);\n    }\n    headers.append(\"Content-Type\", \"application/json\");\n    return headers;\n  }\n\n  public static encodeUrlParams(payload: any) {\n    return Object.keys(payload).map((key) => {\n      return encodeURIComponent(key) + \"=\" + encodeURIComponent(payload[key]);\n    }).join(\"&\");\n  }\n\n  protected errorTransformer(_url: string, error: IRestApiError): Promise<string> {\n    let errorMessage = \"\";\n    for (const field in error) {\n      if (error.hasOwnProperty(field)) {\n        error[field].forEach((message) => {\n          errorMessage += message + \" \";\n        });\n      }\n    }\n    return Promise.reject(errorMessage.trim());\n  }\n\n  protected handleUnsuccessfulRequest(reason: string, dispatch: Dispatch) {\n    dispatch(Api.unsuccessfulRequest(reason));\n  }\n\n  public actionCreator<\n      FrontendPayloadT,\n      BackendPayloadT = FrontendPayloadT,\n      BackendResponseT = BackendPayloadT,\n      FrontendResponseT = BackendResponseT\n    >(\n      pathname: string, payload: FrontendPayloadT,\n      method: HttpMethod,\n      onSuccess: RestApiSuccessCallback<FrontendResponseT>,\n      payloadTransformer?: PayloadTransformer<BackendPayloadT, FrontendPayloadT>,\n      responseTransformer?: ResponseTransformer<BackendResponseT, FrontendResponseT>,\n    ): ApiAction<FrontendResponseT> {\n    return (dispatch: Dispatch, getState: () => IAuthState) => {\n      const transformedPayload = payloadTransformer ? payloadTransformer(payload) : payload as any;\n      return this.requestWithPayload(pathname, transformedPayload, method, dispatch, getState().auth.token)\n        .then((response: BackendResponseT) => {\n          const transformedResponse = responseTransformer ? responseTransformer(response) : response as any;\n          onSuccess(dispatch, transformedResponse);\n          return transformedResponse;\n        });\n    };\n  }\n\n  public getRequest<T>(pathname: string, payload: T, dispatch: Dispatch, token: string): Promise<any> {\n    return this.requestWithPayload(pathname, payload, \"GET\", dispatch, token);\n  }\n\n  public postRequest<T>(pathname: string, payload: T, dispatch: Dispatch, token: string): Promise<any> {\n    return this.requestWithPayload(pathname, payload, \"POST\", dispatch, token);\n  }\n\n  public putRequest<T>(pathname: string, payload: T, dispatch: Dispatch, token: string): Promise<any> {\n    return this.requestWithPayload(pathname, payload, \"PUT\", dispatch, token);\n  }\n\n  public deleteRequest(pathname: string, dispatch: Dispatch, token: string): Promise<any> {\n    return this.request(pathname, dispatch, token, {\n      method: \"DELETE\",\n    });\n  }\n\n  protected handleApiResponse<T>(dispatch: Dispatch, response: Response): Promise<T | string> {\n    switch (response.status) {\n      case HttpStatus.OK:\n      case HttpStatus.CREATED:\n        return response.json();\n      case HttpStatus.NO_CONTENT:\n        return null;\n      case HttpStatus.UNAUTHORIZED:\n        dispatch(completeLogoutAndRedirect());\n        return Promise.reject(\"You are not logged in.\");\n      case HttpStatus.FORBIDDEN:\n        return Promise.reject(\"You have insufficient permissions to perform this action.\");\n      case HttpStatus.BAD_REQUEST:\n        return response.json().then(this.errorTransformer.bind(this, response.url));\n      case HttpStatus.INTERNAL_SERVER_ERROR:\n      case HttpStatus.GATEWAY_TIMEOUT:\n        return Promise.reject(\"An unexpected error has occurred. Please try again later.\");\n      default:\n        return Promise.reject(`Received unexpected status code ${response.status}`);\n    }\n  }\n\n  private requestWithPayload<T>(pathname: string, payload: T, method: HttpMethod,\n                                dispatch: Dispatch, token: string) {\n    pathname = method === \"GET\" && !isNullOrUndefined(payload)\n      ?  `${pathname}?${RestClient.encodeUrlParams(payload)}`\n      : pathname;\n    return this.request(pathname, dispatch, token, {\n      method,\n      body: isNullOrUndefined(payload) || method === \"GET\" ? undefined : JSON.stringify(payload),\n    });\n  }\n\n  private request(pathname: string, dispatch: Dispatch, token: string,\n                  requestOptions: RequestInit = {}): Promise<any> {\n    return fetch(pathname, {\n      headers: RestClient.apiHeaders(token),\n      ...requestOptions,\n    })\n    .then((response) => {\n      return this.handleApiResponse<ResponseType>(dispatch, response);\n    })\n    .catch((reason) => {\n      this.handleUnsuccessfulRequest(reason, dispatch);\n      return Promise.reject(reason);\n    });\n  }\n}\n"]}