{"version":3,"sources":["../src/app/reducers/index.ts"],"names":[],"mappings":";;AAAA,4CAA8D;AAE9D,+CAAwC;AAIxC,SAAgB,eAAe,CAAI,YAAe;IAChD,OAAO,CAAC,QAAW,YAAY,EAAE,OAAe,EAAE,EAAE;QAClD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;AACJ,CAAC;AAJD,0CAIC;AAED,IAAI,YAAY,GAAa,IAAI,CAAC;AAClC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,YAAY,GAAG,cAAO,CAAC,MAAM,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,SAAgB,OAAO,CAAC,YAAgC;IACtD,OAAO,CAAC,QAA4B,YAAY,EAAE,MAAc,EAAE,EAAE;QAClE,QAAQ,MAAM,CAAC,IAAI,EAAE;YACnB,KAAK,aAAG,CAAC,6BAA6B;gBACpC,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEjF,MAAM,OAAO,GAAI,MAA4B,CAAC,MAAM,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;oBAC1B,YAAY,CAAC,IAAI,CAAC;wBAChB,OAAO;wBACP,MAAM,EAAE,aAAM,CAAC,MAAM;qBACtB,CAAC,CAAC;iBACJ;YACH;gBACE,OAAO,KAAK,CAAC;SAChB;IACH,CAAC,CAAC;AACJ,CAAC;AAjBD,0BAiBC;AAED,SAAgB,OAAO,CAAC,YAAgC;IACtD,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACvC,CAAC;AAFD,0BAEC","file":"../../../app/reducers/index.js","sourcesContent":["import { Intent, IToaster, Toaster } from \"@blueprintjs/core\";\nimport { Action } from \"redux\";\nimport { Api } from \"../../api/actions\";\nimport { IApiErrorResponse } from \"../../index\";\nimport { IProductInnerState, IServiceInnerState } from \"../model/index\";\n\nexport function identityReducer<T>(defaultState: T) {\n  return (state: T = defaultState, _action: Action) => {\n    return state;\n  };\n}\n\nlet ErrorToaster: IToaster = null;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  ErrorToaster = Toaster.create();\n});\n\nexport function product(defaultState: IProductInnerState) {\n  return (state: IProductInnerState = defaultState, action: Action) => {\n    switch (action.type) {\n      case Api.UNSUCCESSFUL_API_REQUEST_TYPE:\n        const messages = new Set(ErrorToaster.getToasts().map((props) => props.message));\n\n        const message = (action as IApiErrorResponse).reason;\n        if (!messages.has(message)) {\n          ErrorToaster.show({\n            message,\n            intent: Intent.DANGER,\n          });\n        }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function service(defaultState: IServiceInnerState) {\n  return identityReducer(defaultState);\n}\n"]}