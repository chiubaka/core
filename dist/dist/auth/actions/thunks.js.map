{"version":3,"sources":["../src/auth/actions/thunks.ts"],"names":[],"mappings":";;AAAA,mEAA8C;AAG9C,yCAA4C;AAG5C,iGAAiG;AACjG,8FAA8F;AAC9F,kFAAkF;AAClF,SAAgB,yBAAyB;IACvC,OAAO,CAAC,QAAkB,EAAE,QAA0B,EAAE,EAAE;QACxD,QAAQ,CAAC,yBAAc,EAAE,CAAC,CAAC;QAC3B,QAAQ,CAAC,6BAAI,CAAC,aAAa,EAAE;YAC3B,0CAA0C;YAC1C,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC,CAAC;IACN,CAAC,CAAC;AACJ,CAAC;AARD,8DAQC","file":"../../../auth/actions/thunks.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nimport { IAuthState } from \"../model\";\nimport { completeLogout } from \"./creators\";\nimport { AuthDispatch as Dispatch } from \"./types\";\n\n// Performs the deletion of the JWT token before redirecting the user back out to the login page.\n// NOTE: In almost all cases you want AuthApi.getInstance().logout() instead. That method also\n// handles hitting the API backend to revoke the JWT token as an extra precaution.\nexport function completeLogoutAndRedirect() {\n  return (dispatch: Dispatch, getState: () => IAuthState) => {\n    dispatch(completeLogout());\n    dispatch(push(\"/auth/login\", {\n      // TODO: This path should be configurable.\n      redirectPath: \"/app\",\n    }));\n  };\n}\n"]}