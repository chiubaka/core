{"version":3,"sources":["../src/auth/model/AuthenticationState.ts"],"names":[],"mappings":";;AAAA,+BAAyC;AAGzC,4CAA4C;AAE5C,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,yDAAW,CAAA;IACX,qDAAS,CAAA;IACT,mDAAQ,CAAA;IACR,uDAAU,CAAA;AACZ,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAkBY,QAAA,kBAAkB,GAAoB;IACjD,oBAAoB,EAAE,KAAK;IAC3B,kBAAkB,EAAE,KAAK;IACzB,cAAc,EAAE,KAAK;IACrB,UAAU,EAAE,UAAU,CAAC,WAAW;IAClC,eAAe,EAAE,EAAE;IACnB,sBAAsB,EAAE,8BAA8B;CACvD,CAAC;AAEF,SAAgB,oBAAoB,CAAC,aAAuC;IAC1E,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;IACjC,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC/B,MAAM,YAAY,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;IAE/C,yBACK,0BAAkB,IACrB,KAAK;QACL,IAAI,EACJ,UAAU,EAAE,CAAC,wBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,EACpF,YAAY,IACT,aAAa,EAChB;AACJ,CAAC;AAbD,oDAaC","file":"../../../auth/model/AuthenticationState.js","sourcesContent":["import { isNullOrUndefined } from \"util\";\n\nimport { ISocialLoginProvider, IUser } from \"../../app/types/index\";\nimport * as Cookies from \"../utils/storage\";\n\nexport enum LoginState {\n  NotLoggedIn,\n  LoggingIn,\n  LoggedIn,\n  LoggingOut,\n}\n\nexport interface IAuthState {\n  auth: IAuthInnerState;\n}\n\nexport interface IAuthInnerState {\n  token?: string;\n  user?: IUser;\n  loginState: LoginState;\n  oAuth2CallbackBasePath: string;\n  socialProviders: ISocialLoginProvider[];\n  enableNonSocialLogin: boolean;\n  useEmailAsUsername: boolean;\n  wrapParameters: boolean;\n  redirectPath?: string;\n}\n\nexport const DEFAULT_AUTH_STATE: IAuthInnerState = {\n  enableNonSocialLogin: false,\n  useEmailAsUsername: false,\n  wrapParameters: false,\n  loginState: LoginState.NotLoggedIn,\n  socialProviders: [],\n  oAuth2CallbackBasePath: \"/auth/login/oauth2/complete/\",\n};\n\nexport function getExistingAuthState(overrideState: Partial<IAuthInnerState>) {\n  const token = Cookies.getToken();\n  const user = Cookies.getUser();\n  const redirectPath = Cookies.getRedirectPath();\n\n  return {\n    ...DEFAULT_AUTH_STATE,\n    token,\n    user,\n    loginState: !isNullOrUndefined(token) ? LoginState.LoggedIn : LoginState.NotLoggedIn,\n    redirectPath,\n    ...overrideState,\n  };\n}\n"]}