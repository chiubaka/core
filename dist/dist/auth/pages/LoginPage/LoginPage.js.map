{"version":3,"sources":["../src/auth/pages/LoginPage/LoginPage.tsx"],"names":[],"mappings":"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","file":"../../../../auth/pages/LoginPage/LoginPage.js","sourcesContent":["import { Button, Classes, ControlGroup, InputGroup } from \"@blueprintjs/core\";\nimport * as classnames from \"classnames\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport { IProductState } from \"../../../app/model\";\nimport { ISocialLoginProvider } from \"../../../app/types\";\nimport { AuthApi, AuthDispatch as Dispatch, setRedirect } from \"../../actions\";\nimport { SocialLoginButton } from \"../../components/SocialLoginButton\";\nimport { IAuthState, LoginState } from \"../../model/AuthenticationState\";\n\nexport interface ILoginPageStateProps {\n  loggedIn: boolean;\n  logoPath?: string;\n  productName: string;\n  socialProviders: ISocialLoginProvider[];\n  enableNonSocialLogin: boolean;\n  useEmailAsUsername: boolean;\n}\n\nexport interface ILoginPageDispatchProps {\n  onSubmitLogin: (username: string, password: string) => void;\n  setRedirect: (redirectPath: string) => void;\n}\n\nexport interface ILoginPageOwnProps extends RouteComponentProps<any> {\n  defaultRedirectPath?: string;\n}\n\nexport interface ILoginPageProps extends ILoginPageStateProps, ILoginPageDispatchProps,\n  ILoginPageOwnProps {}\n\nexport interface ILoginPageState {\n  username: string;\n  password: string;\n  showSocialLogin: boolean;\n}\n\nclass LoginPage extends React.Component<ILoginPageProps, ILoginPageState> {\n  public static defaultProps: Partial<ILoginPageProps> = {\n    loggedIn: false,\n    defaultRedirectPath: \"/\",\n    socialProviders: [],\n  };\n\n  constructor(props?: ILoginPageProps) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      showSocialLogin: true,\n    };\n\n    this.editUsername = this.editUsername.bind(this);\n    this.editPassword = this.editPassword.bind(this);\n    this.handlePasswordKeyPress = this.handlePasswordKeyPress.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n    this.toggleLoginType = this.toggleLoginType.bind(this);\n  }\n\n  public componentWillReceiveProps(props?: ILoginPageProps) {\n    this.checkAuthentication(props);\n    this.setRedirect(props);\n  }\n\n  public componentWillMount() {\n    this.checkAuthentication(this.props);\n    this.setRedirect(this.props);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className=\"login-page container d-table\">\n        <div className=\"content d-table-cell align-middle\">\n          {this.renderLogo()}\n          <span className=\"product-name\">\n            {this.props.productName}\n          </span>\n          {this.renderLoginForm()}\n          {this.renderSocialLoginButtons()}\n          {this.renderLoginTypeSwitch()}\n        </div>\n      </div>\n    );\n  }\n\n  private renderLogo() {\n    const logoPath = this.props.logoPath;\n    if (logoPath) {\n      return (\n        <img\n          height=\"250\"\n          className=\"logo mx-auto d-block\"\n          src={this.props.logoPath}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  private renderLoginForm(): JSX.Element {\n    const { username, password, showSocialLogin } = this.state;\n    const { enableNonSocialLogin, socialProviders, useEmailAsUsername } = this.props;\n\n    if (!enableNonSocialLogin || (socialProviders.length > 0 && showSocialLogin)) {\n      return null;\n    }\n\n    return (\n      <ControlGroup className=\"login-form\" vertical={true}>\n        <InputGroup\n          onChange={this.editUsername}\n          className={Classes.LARGE}\n          leftIcon={useEmailAsUsername ? \"envelope\" : \"person\"}\n          placeholder={useEmailAsUsername ? \"Email\" : \"Username\"}\n          value={username}\n        />\n        <InputGroup\n          onChange={this.editPassword}\n          onKeyUp={this.handlePasswordKeyPress}\n          className={Classes.LARGE}\n          type=\"password\"\n          leftIcon=\"lock\"\n          placeholder=\"Password\"\n          value={password}\n        />\n        <Button\n          disabled={!(username && password)}\n          onClick={this.submitLogin}\n          className={classnames(Classes.INTENT_PRIMARY, Classes.LARGE)}\n          text=\"Login\"\n        />\n      </ControlGroup>\n    );\n  }\n\n  private renderSocialLoginButtons(): JSX.Element[] {\n    if (this.props.enableNonSocialLogin && !this.state.showSocialLogin) {\n      return null;\n    }\n\n    const providers = this.props.socialProviders;\n\n    return providers.map((provider) => {\n      const {clientId, providerName} = provider;\n\n      return (\n        <SocialLoginButton\n          key={providerName}\n          clientId={clientId}\n          providerName={providerName}\n          {...this.props}\n        />\n      );\n    });\n  }\n\n  private renderLoginTypeSwitch(): JSX.Element {\n    const { socialProviders, enableNonSocialLogin } = this.props;\n\n    if (socialProviders.length === 0 || !enableNonSocialLogin) {\n      return null;\n    }\n\n    if (this.state.showSocialLogin) {\n      return (\n        <span className=\"login-type-helper\">\n          Or login with your <a onClick={this.toggleLoginType}>username and password</a>.\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"login-type-helper\">\n          Or login with your <a onClick={this.toggleLoginType}>favorite social network</a>.\n        </span>\n      );\n    }\n  }\n\n  private editUsername(event: React.FormEvent<any>) {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    this.setState({...this.state, username: value});\n  }\n\n  private editPassword(event: React.FormEvent<any>) {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    this.setState({...this.state, password: value});\n  }\n\n  private handlePasswordKeyPress(event: React.KeyboardEvent<any>) {\n    if (event.key === \"Enter\") {\n      this.submitLogin();\n    }\n  }\n\n  private submitLogin() {\n    const { username, password } = this.state;\n    this.props.onSubmitLogin(username, password);\n  }\n\n  private toggleLoginType() {\n    this.setState({...this.state, showSocialLogin: !this.state.showSocialLogin});\n  }\n\n  private checkAuthentication(props: ILoginPageProps) {\n    if (props.loggedIn) {\n      if (props.location.state && props.location.state.redirectPath) {\n        props.history.push(props.location.state.redirectPath);\n      } else {\n        props.history.push(props.defaultRedirectPath);\n      }\n    }\n  }\n\n  private setRedirect(props: ILoginPageProps) {\n    const redirectPath = props.location.state && props.location.state.redirectPath;\n\n    if (redirectPath) {\n      props.setRedirect(redirectPath);\n    }\n  }\n}\n\nfunction mapStateToProps(state: IAuthState & IProductState): ILoginPageStateProps {\n  return {\n    loggedIn: state.auth.loginState === LoginState.LoggedIn,\n    logoPath: state.product.logoPath,\n    productName: state.product.productName,\n    socialProviders: state.auth.socialProviders,\n    enableNonSocialLogin: state.auth.enableNonSocialLogin,\n    useEmailAsUsername: state.auth.useEmailAsUsername,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): ILoginPageDispatchProps {\n  return {\n    onSubmitLogin: (username: string, password: string) => {\n      dispatch(AuthApi.getInstance().login(username, password));\n    },\n    setRedirect: (redirectPath: string) => {\n      dispatch(setRedirect(redirectPath));\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(LoginPage) as any);\n"]}