{"version":3,"sources":["../src/auth/pages/LogoutPage.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,6CAAsC;AACtC,uDAAmE;AAcnE,SAAgB,eAAe,CAAC,GAAY;IAC1C,MAAM,UAAW,SAAQ,KAAK,CAAC,SAA+B;QACrD,kBAAkB;YACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC;QAEM,MAAM;YACX,OAAO,IAAI,CAAC;QACd,CAAC;KACF;IAED,SAAS,kBAAkB,CAAC,QAAkB,EAAE,QAA6B;QAC3E,OAAO;YACL,QAAQ,EAAE,GAAG,EAAE;gBACb,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;gBACvB,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;gBACtE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACxC,CAAC;SACF,CAAC;IACJ,CAAC;IAED,OAAO,6BAAU,CAAC,qBAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AACnE,CAAC;AAtBD,0CAsBC","file":"../../../auth/pages/LogoutPage.js","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport { AuthApi, AuthDispatch as Dispatch, IAuthApiAdapter } from \"../actions\";\n\nexport interface ILogoutPageDispatchProps {\n  onLogout: () => void;\n}\n\nexport interface ILogoutPageOwnProps extends RouteComponentProps<any> {\n  redirectUri?: string;\n}\n\nexport interface ILogoutPageProps extends ILogoutPageOwnProps, ILogoutPageDispatchProps {}\n\nexport function buildLogoutPage(api: AuthApi) {\n  class LogoutPage extends React.Component<ILogoutPageProps, {}> {\n    public componentWillMount() {\n      this.props.onLogout();\n    }\n  \n    public render(): JSX.Element {\n      return null;\n    }\n  }\n  \n  function mapDispatchToProps(dispatch: Dispatch, ownProps: ILogoutPageOwnProps): ILogoutPageDispatchProps {\n    return {\n      onLogout: () => {\n        dispatch(api.logout());\n        const redirectUri = ownProps.redirectUri ? ownProps.redirectUri : \"/\";\n        ownProps.history.replace(redirectUri);\n      },\n    };\n  }\n  \n  return withRouter(connect(null, mapDispatchToProps)(LogoutPage));\n}\n"]}