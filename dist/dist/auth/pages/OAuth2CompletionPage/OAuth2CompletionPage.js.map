{"version":3,"sources":["../src/auth/pages/OAuth2CompletionPage/OAuth2CompletionPage.tsx"],"names":[],"mappings":";;AAAA,+CAAqC;AACrC,+BAA+B;AAC/B,6CAAsC;AACtC,uDAAmE;AAEnE,qEAAkE;AAElE,2CAAiF;AACjF,yEAAyE;AACzE,yCAAyD;AAoBzD,SAAgB,yBAAyB,CAAC,GAAY;IACpD,MAAM,oBAAqB,SAAQ,KAAK,CAAC,SAAqC;QACrE,kBAAkB;YACvB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;QAEM,yBAAyB,CAAC,SAAqC;YACpE,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC;QAEM,MAAM;YACX,OAAO,CACL,6BAAK,SAAS,EAAC,qCAAqC;gBAClD,6BAAK,SAAS,EAAC,2BAA2B;oBACxC,oBAAC,yBAAW,IAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,GAAG,CACxD,CACF,CACP,CAAC;QACJ,CAAC;QAEO,uBAAuB,CAAC,KAAiC;YAC/D,MAAM,WAAW,GAAG,oBAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjD,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;YAE9B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACnB,0EAA0E;gBAC1E,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAE7C,MAAM,EAAE,QAAQ,EAAE,sBAAsB,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;gBACjE,MAAM,iBAAiB,GAAG,4BAAsB,CAAC,QAAQ,EAAE,sBAAsB,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;gBAE3G,KAAK,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAc,EAAE,iBAAiB,CAAC,CAAC;aACvE;iBAAM;gBACL,KAAK,CAAC,aAAa,EAAE,CAAC;gBACtB,uEAAuE;gBACvE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACtE;QACH,CAAC;KACF;IAED,SAAS,eAAe,CAAC,KAAiC;QACxD,OAAO;YACL,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ;YAChC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,KAAK,gCAAU,CAAC,QAAQ;YACvD,sBAAsB,EAAE,KAAK,CAAC,IAAI,CAAC,sBAAsB;YACzD,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI;YACxB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM;YAC5B,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY;SACtC,CAAC;IACJ,CAAC;IAED,SAAS,kBAAkB,CAAC,QAAkB;QAC5C,OAAO;YACL,aAAa,EAAE,GAAG,EAAE;gBAClB,QAAQ,CAAC,uBAAa,EAAE,CAAC,CAAC;YAC5B,CAAC;YACD,kBAAkB,EAAE,CAAC,QAAgB,EAAE,IAAY,EAAE,iBAAyB,EAAE,EAAE;gBAChF,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC;YAC/D,CAAC;SACF,CAAC;IACJ,CAAC;IAED,OAAO,qBAAO,CACZ,eAAe,EACf,kBAAkB,CACnB,CAAC,6BAAU,CAA6B,oBAAoB,CAAC,CAAC,CAAC;AAClE,CAAC;AAlED,8DAkEC","file":"../../../../auth/pages/OAuth2CompletionPage/OAuth2CompletionPage.js","sourcesContent":["import { parse } from \"query-string\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport { ProgressBar } from \"../../../app/components/ProgressBar\";\nimport { IServiceInnerState, IServiceState } from \"../../../app/model\";\nimport { AuthApi, AuthDispatch as Dispatch, clearRedirect } from \"../../actions\";\nimport { IAuthState, LoginState } from \"../../model/AuthenticationState\";\nimport { buildOAuth2CallbackUri } from \"../../utils/uri\";\n\nexport interface IOAuth2CompletionPageParams {\n  provider: string;\n}\n\nexport interface IOAuth2CompletionPageStateProps extends IServiceInnerState {\n  loggedIn: boolean;\n  oAuth2CallbackBasePath: string;\n  redirectPath: string;\n}\n\nexport interface IOAuth2CompletionPageDispatchProps {\n  clearRedirect: () => void;\n  onOAuth2Completion: (provider: string, code: string, redirectUri: string) => void;\n}\n\nexport interface IOAuth2CompletionPageProps extends RouteComponentProps<IOAuth2CompletionPageParams>,\n  IOAuth2CompletionPageStateProps, IOAuth2CompletionPageDispatchProps {}\n\nexport function buildOAuth2CompletionPage(api: AuthApi) {\n  class OAuth2CompletionPage extends React.Component<IOAuth2CompletionPageProps> {\n    public componentWillMount() {\n      this.handleOAuth2AndRedirect(this.props);\n    }\n  \n    public componentWillReceiveProps(nextProps: IOAuth2CompletionPageProps) {\n      this.handleOAuth2AndRedirect(nextProps);\n    }\n  \n    public render(): JSX.Element {\n      return (\n        <div className=\"oauth2-completion container d-table\">\n          <div className=\"d-table-cell align-middle\">\n            <ProgressBar progress={100} striped={true} animated={true}/>\n          </div>\n        </div>\n      );\n    }\n\n    private handleOAuth2AndRedirect(props: IOAuth2CompletionPageProps) {\n      const queryParams = parse(props.location.search);\n      const code = queryParams.code;\n  \n      if (!props.loggedIn) {\n        // TODO: Need to handle case where user is not logged in but login failed.\n        const provider = props.match.params.provider;\n  \n        const { hostname, oAuth2CallbackBasePath, port, useSsl } = props;\n        const oAuth2CallbackUri = buildOAuth2CallbackUri(hostname, oAuth2CallbackBasePath, provider, port, useSsl);\n  \n        props.onOAuth2Completion(provider, code as string, oAuth2CallbackUri);\n      } else {\n        props.clearRedirect();\n        // TODO: Should not be \"/\" here, should be a parameterized default path\n        props.history.replace(props.redirectPath ? props.redirectPath : \"/\");\n      }\n    }\n  }\n  \n  function mapStateToProps(state: IAuthState & IServiceState): IOAuth2CompletionPageStateProps {\n    return {\n      hostname: state.service.hostname,\n      loggedIn: state.auth.loginState === LoginState.LoggedIn,\n      oAuth2CallbackBasePath: state.auth.oAuth2CallbackBasePath,\n      port: state.service.port,\n      useSsl: state.service.useSsl,\n      redirectPath: state.auth.redirectPath,\n    };\n  }\n\n  function mapDispatchToProps(dispatch: Dispatch): IOAuth2CompletionPageDispatchProps {\n    return {\n      clearRedirect: () => {\n        dispatch(clearRedirect());\n      },\n      onOAuth2Completion: (provider: string, code: string, oAuth2CallbackUri: string) => {\n        dispatch(api.socialLogin(provider, code, oAuth2CallbackUri));\n      },\n    };\n  }\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(withRouter<IOAuth2CompletionPageProps>(OAuth2CompletionPage));\n}\n"]}