{"version":3,"sources":["../src/auth/reducers/index.ts"],"names":[],"mappings":";;AACA,+BAAyC;AACzC,4CAAwG;AACxG,sEAA+F;AAC/F,4CAA4C;AAE5C,SAAgB,IAAI,CAAC,QAAyB,wCAAkB,EAAE,MAAc;IAC9E,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,mBAAW,CAAC,WAAW;YAC1B,yBAAW,KAAK,IAAE,UAAU,EAAE,gCAAU,CAAC,SAAS,IAAE;QACtD,KAAK,mBAAW,CAAC,cAAc;YAC7B,MAAM,KAAK,GAAI,MAAyB,CAAC,KAAK,CAAC;YAC/C,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACxB,yBAAW,KAAK,IAAE,UAAU,EAAE,CAAC,wBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gCAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,gCAAU,CAAC,WAAW,EAAE,KAAK,IAAE;QACjH,KAAK,mBAAW,CAAC,2BAA2B;YAC1C,MAAM,IAAI,GAAI,MAAoC,CAAC,IAAI,CAAC;YACxD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,yBAAW,KAAK,IAAE,IAAI,IAAE;QAC1B,KAAK,mBAAW,CAAC,YAAY;YAC3B,yBAAW,KAAK,IAAE,UAAU,EAAE,gCAAU,CAAC,UAAU,IAAE;QACvD,KAAK,mBAAW,CAAC,UAAU,CAAC;QAC5B,KAAK,mBAAW,CAAC,eAAe;YAC9B,OAAO,CAAC,WAAW,EAAE,CAAC;YACtB,OAAO,CAAC,UAAU,EAAE,CAAC;YACrB,yBAAW,KAAK,IAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,gCAAU,CAAC,WAAW,IAAE;QAC3F,KAAK,mBAAW,CAAC,YAAY;YAC3B,MAAM,YAAY,GAAI,MAAuB,CAAC,YAAY,CAAC;YAC3D,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YACtC,yBAAW,KAAK,IAAE,YAAY,IAAE;QAClC,KAAK,mBAAW,CAAC,cAAc;YAC7B,OAAO,CAAC,kBAAkB,EAAE,CAAC;YAC7B,yBAAW,KAAK,IAAE,YAAY,EAAE,SAAS,IAAE;QAC7C;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;AA7BD,oBA6BC","file":"../../../auth/reducers/index.js","sourcesContent":["import { Action } from \"redux\";\nimport { isNullOrUndefined } from \"util\";\nimport { ActionTypes, ICompleteLogin, ISetRedirect, ISuccessfulGetUserDetails } from \"../actions/index\";\nimport { DEFAULT_AUTH_STATE, IAuthInnerState, LoginState } from \"../model/AuthenticationState\";\nimport * as Cookies from \"../utils/storage\";\n\nexport function auth(state: IAuthInnerState = DEFAULT_AUTH_STATE, action: Action) {\n  switch (action.type) {\n    case ActionTypes.START_LOGIN:\n      return {...state, loginState: LoginState.LoggingIn};\n    case ActionTypes.COMPLETE_LOGIN:\n      const token = (action as ICompleteLogin).token;\n      Cookies.setToken(token);\n      return {...state, loginState: !isNullOrUndefined(token) ? LoginState.LoggedIn : LoginState.NotLoggedIn, token};\n    case ActionTypes.SUCCESSFUL_GET_USER_DETAILS:\n      const user = (action as ISuccessfulGetUserDetails).user;\n      Cookies.setUser(user);\n      return {...state, user};\n    case ActionTypes.START_LOGOUT:\n      return {...state, loginState: LoginState.LoggingOut};\n    case ActionTypes.FAIL_LOGIN:\n    case ActionTypes.COMPLETE_LOGOUT:\n      Cookies.removeToken();\n      Cookies.removeUser();\n      return {...state, token: undefined, user: undefined, loginState: LoginState.NotLoggedIn};\n    case ActionTypes.SET_REDIRECT:\n      const redirectPath = (action as ISetRedirect).redirectPath;\n      Cookies.setRedirectPath(redirectPath);\n      return {...state, redirectPath};\n    case ActionTypes.CLEAR_REDIRECT:\n      Cookies.removeRedirectPath();\n      return {...state, redirectPath: undefined};\n    default:\n      return state;\n  }\n}\n"]}