{"version":3,"sources":["../src/common/components/Navbar/Navbar.tsx"],"names":[],"mappings":";;AAAA,yCAAyC;AACzC,+BAA+B;AAC/B,6CAAsC;AACtC,uDAAiD;AAuBjD,MAAM,UAAW,SAAQ,KAAK,CAAC,SAAuB;IAM7C,WAAW;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC1C,OAAO,CACL,4BAAI,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC7E,oBAAC,0BAAO,IACN,SAAS,EAAC,UAAU,EACpB,EAAE,EAAE,IAAI,CAAC,IAAI;oBAEZ,IAAI,CAAC,IAAI;oBAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAC,SAAS,gBAAiB,CAAC,CAAC,CAAC,EAAE,CAClE,CACP,CACN,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEpD,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC;YAC5B,CACE,6BACE,GAAG,EAAE,QAAQ,EACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC1B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC3B,GAAG,EAAE,WAAW,EAChB,SAAS,EAAC,+BAA+B,GACzC,CACH;YACD,CAAC,CAAC,IAAI,CAAC;QAET,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC;YAC3F,oBAAC,uBAAI,IAAC,SAAS,EAAC,cAAc,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;gBACpD,WAAW;gBACZ,8BAAM,SAAS,EAAC,cAAc,IAAE,WAAW,CAAQ,CAC9C;YACP,gCACE,SAAS,EAAC,gBAAgB,EAC1B,IAAI,EAAC,QAAQ,iBACD,UAAU,iBACV,yBAAyB,mBACvB,wBAAwB,mBACxB,OAAO,gBACV,mBAAmB;gBAE9B,8BAAM,SAAS,EAAC,qBAAqB,GAAE,CAChC;YAET,6BAAK,SAAS,EAAC,0BAA0B,EAAC,EAAE,EAAC,wBAAwB;gBACnE,4BAAI,SAAS,EAAC,8BAA8B,IACzC,IAAI,CAAC,WAAW,EAAE,CAChB,CACD,CACF,CACP,CAAC;IACJ,CAAC;;AA5Da,uBAAY,GAA0B;IAClD,SAAS,EAAE,GAAG;IACd,QAAQ,EAAE,EAAE;CACb,CAAC;AA4DJ,SAAS,eAAe,CAAC,KAAoB;IAC3C,OAAO;QACL,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ;QAChC,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;KACvC,CAAC;AACJ,CAAC;AAEY,QAAA,MAAM,GAAG,qBAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC","file":"../../../../common/components/Navbar/Navbar.js","sourcesContent":["import * as classnames from \"classnames\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { IProductState } from \"../../../app/model/index\";\n\nexport interface INavbarEntry {\n  text: string;\n  path: string;\n  current?: boolean;\n}\n\nexport interface INavbarOwnProps {\n  brandLink?: string;\n  links: INavbarEntry[];\n  logoSize?: number;\n  light?: boolean;\n}\n\nexport interface INavbarStateProps {\n  logoPath?: string;\n  productName: string;\n}\n\nexport interface INavbarProps extends INavbarOwnProps, INavbarStateProps {}\n\nclass NavbarImpl extends React.Component<INavbarProps> {\n  public static defaultProps: Partial<INavbarProps> = {\n    brandLink: \"/\",\n    logoSize: 30,\n  };\n\n  public createLinks(): JSX.Element[] {\n    return this.props.links.map((link, index) => {\n      return (\n        <li key={index} className={classnames(\"nav-item\", link.current ? \"active\" : \"\")}>\n          <NavLink\n            className=\"nav-link\"\n            to={link.path}\n          >\n            {link.text}{link.current ? <span className=\"sr-only\">(current)</span> : \"\"}\n          </NavLink>\n        </li>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const { light, logoPath, productName } = this.props;\n\n    const logoElement = logoPath ?\n      (\n        <img\n          src={logoPath}\n          width={this.props.logoSize}\n          height={this.props.logoSize}\n          alt={productName}\n          className=\"d-inline-block align-top logo\"\n        />\n      )\n      : null;\n\n    return (\n      <nav className={classnames(\"navbar navbar-expand-sm\", light ? \"navbar-light\" : \"navbar-dark\")}>\n        <Link className=\"navbar-brand\" to={this.props.brandLink}>\n          {logoElement}\n          <span className=\"product-name\">{productName}</span>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto align-top\">\n            {this.createLinks()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state: IProductState): INavbarStateProps {\n  return {\n    logoPath: state.product.logoPath,\n    productName: state.product.productName,\n  };\n}\n\nexport const Navbar = connect(mapStateToProps)(NavbarImpl);\n"]}