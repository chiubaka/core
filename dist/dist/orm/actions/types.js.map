{"version":3,"sources":["../src/orm/actions/types.ts"],"names":[],"mappings":";;AAIA,IAAY,eAOX;AAPD,WAAY,eAAe;IACzB,8DAA2C,CAAA;IAC3C,kEAA+C,CAAA;IAC/C,kEAA+C,CAAA;IAC/C,gDAA6B,CAAA;IAC7B,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;AACjC,CAAC,EAPW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAO1B;AAMD,SAAgB,aAAa,CAAC,MAAc;IAC1C,OAAQ,MAAuB,CAAC,SAAS,IAAI,IAAI,CAAC;AACpD,CAAC;AAFD,sCAEC","file":"../../../orm/actions/types.js","sourcesContent":["import { Action } from \"redux\";\n\nimport { IModel, PartialModel } from \"../model\";\n\nexport enum ModelActionType {\n  START_SYNCING_MODEL = \"START_SYNCING_MODEL\",\n  SUCCESSFUL_SYNC_MODEL = \"SUCCESSFUL_SYNC_MODEL\",\n  SUCCESSFUL_LIST_MODEL = \"SUCCESSFUL_LIST_MODEL\",\n  CREATE_MODEL = \"CREATE_MODEL\",\n  UPDATE_MODEL = \"UPDATE_MODEL\",\n  DESTROY_MODEL = \"DESTROY_MODEL\",\n}\n\nexport interface IModelAction extends Action {\n  modelName: string;\n}\n\nexport function isModelAction(action: Action): action is IModelAction {\n  return (action as IModelAction).modelName != null;\n}\n\n// When creating, all fields non-optional fields are required.\nexport interface IModelCreate<T extends IModel = IModel> extends IModelAction {\n  payload: T;\n}\n\n// When updating, all fields are optional in order to support partial updates.\nexport interface IModelUpdate<T extends IModel = IModel> extends IModelAction {\n  payload: PartialModel<T>;\n}\n\nexport interface IModelIdAction extends IModelAction {\n  id: string;\n}\n\nexport interface ISuccessfulListModel<T extends IModel = IModel> extends IModelAction {\n  items: T[];\n}\n\nexport declare type ModelAction = IModelCreate | IModelUpdate | IModelIdAction | ISuccessfulListModel;\n"]}